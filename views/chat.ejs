<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat with <%= recipient %></title>
    <link rel="stylesheet" href="/css/chat.css" />
  </head>
  <body>
    <div class="chat-container">
      <h1>Chat with <%= recipient %></h1>
      <div id="chat-box">
        <!-- Messages will be displayed here -->
      </div>
      <form id="chat-form">
        <input type="text" id="message-input" placeholder="Type a message..." required autocomplete="off" />
        <button type="submit">Send</button>
      </form>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const chatBox = document.getElementById('chat-box');
      const chatForm = document.getElementById('chat-form');
      const messageInput = document.getElementById('message-input');
      const currentUser = "<%= username %>"; 
      const recipient = "<%= recipient %>";

      socket.emit('join room', { currentUser, recipient });

      // Listen for incoming messages
      socket.on('chat message', ({ sender, message }) => {
        const messageElement = document.createElement('p');
        if (sender === currentUser) {
          messageElement.style.color = 'blue'; // Current user's messages
        } else {
          messageElement.style.color = 'green'; // Recipient's messages
        }
        messageElement.textContent = `${sender}: ${message}`;
        chatBox.appendChild(messageElement);
      });

      // Handle the form submission to send a message so that the pagte doesnt have to reload
      chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const message = messageInput.value;
        socket.emit('chat message', { room: recipient, message });
        messageInput.value = '';
      });
    </script>
  </body>
</html>
